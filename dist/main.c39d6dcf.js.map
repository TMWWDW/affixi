{"version":3,"sources":["main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,IAAU,MAAV;;AAAA,CAAA,UAAU,MAAV,EAAgB;AACd,MAAiB,KAAjB;;AAAA,GAAA,UAAiB,KAAjB,EAAsB;AACpB,QAAY,IAAZ;;AAAA,KAAA,UAAY,IAAZ,EAAgB;AACd;AACA,MAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA;;AACA,MAAA,IAAA,CAAA,IAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;AACA;;AACA,MAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA;;AACA,MAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA;;AACA,MAAA,IAAA,CAAA,IAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAA;AACA;;AACA,MAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACD,KAbD,EAAY,IAAI,GAAJ,KAAA,CAAA,IAAA,KAAA,KAAA,CAAA,IAAA,GAAI,EAAJ,CAAZ;;AAcA,QAAY,OAAZ;;AAAA,KAAA,UAAY,OAAZ,EAAmB;AACjB;AACA,MAAA,OAAA,CAAA,OAAA,CAAA,eAAA,CAAA,GAAA,CAAA,CAAA,GAAA,eAAA;AACA;;AACA,MAAA,OAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAA;AACA;;AACA,MAAA,OAAA,CAAA,OAAA,CAAA,eAAA,CAAA,GAAA,CAAA,CAAA,GAAA,eAAA;AACA;;AACA,MAAA,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACA;;AACA,MAAA,OAAA,CAAA,OAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAA;AACA;;AACA,MAAA,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACD,KAbD,EAAY,OAAO,GAAP,KAAA,CAAA,OAAA,KAAA,KAAA,CAAA,OAAA,GAAO,EAAP,CAAZ;AAcD,GA7BD,EAAiB,KAAK,GAAL,MAAA,CAAA,KAAA,KAAA,MAAA,CAAA,KAAA,GAAK,EAAL,CAAjB;;AA+BA,MAAA,MAAA;AAAA;AAAA,cAAA;AAAA,aAAA,MAAA,GAAA,CAaC;;AAZQ,IAAA,MAAA,CAAA,sBAAA,GAAyB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAzB;AACA,IAAA,MAAA,CAAA,4BAAA,GAA+B,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAA/B;AACA,IAAA,MAAA,CAAA,kBAAA,GAAkB,cAAA,CACpB,MAAM,CAAC,4BADa,EAEpB,MAAM,CAAC,sBAFa,CAAlB;AAIA,IAAA,MAAA,CAAA,oBAAA,GAAuB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAvB;AACA,IAAA,MAAA,CAAA,aAAA,GAAgB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAhB;AACA,IAAA,MAAA,CAAA,eAAA,GAAkB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAlB;AACA,IAAA,MAAA,CAAA,UAAA,GAAa,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAb;AACA,IAAA,MAAA,CAAA,WAAA,GAAc,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAd;AACA,IAAA,MAAA,CAAA,MAAA,GAAM,cAAA,CAAO,MAAM,CAAC,WAAd,EAA8B,MAAM,CAAC,UAArC,CAAN;AACT,WAAA,MAAA;AAbA,GAAA,EAAA;;AAAa,EAAA,MAAA,CAAA,MAAA,GAAM,MAAN;;AAeb,MAAA,IAAA;AAAA;AAAA,cAAA;AAAA,aAAA,IAAA,GAAA,CA0BC;;AAzBQ,IAAA,IAAA,CAAA,iBAAA,GAAP,UAAyB,IAAzB,EAAqC;AACnC,UAAI,KAAK,GAAG,IAAI,CACb,KADS,CACH,EADG,EAET,OAFS,GAGT,IAHS,CAGJ,EAHI,CAAZ;AAIA,UAAI,KAAK,GAAG,CAAZ;AACA,UAAI,MAAM,GAAG,KAAK,CAAC,CAAD,CAAlB;AACA,UAAI,KAAK,GAAG,KAAK,CAAC,KAAD,CAAjB;;AAEA,aAAO,CAAC,MAAM,CAAC,MAAP,CAAc,QAAd,CAAuB,KAAvB,CAAR,EAAuC;AACrC,QAAA,KAAK;AACL,QAAA,KAAK,GAAG,KAAK,CAAC,KAAD,CAAb;AACD;;AACD,aAAO;AAAE,QAAA,MAAM,EAAA,MAAR;AAAU,QAAA,KAAK,EAAA;AAAf,OAAP;AACD,KAdM;;AAgBA,IAAA,IAAA,CAAA,gBAAA,GAAP,UAAwB,IAAxB,EAAoC;AAClC,UAAI,KAAK,GAAG,CAAZ;AACA,UAAI,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,EAAX,CAAZ;AACA,MAAA,KAAK,CAAC,OAAN,CAAc,UAAA,MAAA,EAAM;AAClB,YAAI,MAAM,CAAC,MAAP,CAAc,QAAd,CAAuB,MAAM,CAAC,WAAP,EAAvB,CAAJ,EAAkD,KAAK,IAAI,CAAT;AACnD,OAFD;AAIA,aAAO,KAAP;AACD,KARM;;AAST,WAAA,IAAA;AA1BA,GAAA,EAAA;;AAAa,EAAA,MAAA,CAAA,IAAA,GAAI,IAAJ;;AA4Bb,MAAA,gBAAA;AAAA;AAAA,cAAA;AAEE,aAAA,gBAAA,GAAA;AACE,WAAK,OAAL,GAAe,KAAK,CAAC,OAAN,CAAc,aAA7B;AACD;;AAED,IAAA,gBAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,OAAL,EAA2B;AACzB,WAAK,OAAL,GAAe,OAAf;AACA,aAAO,IAAP;AACD,KAHD;;AAKA,IAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,IAAH,EAAiB,YAAjB,EAAqC;AAApB,UAAA,YAAA,KAAA,KAAA,CAAA,EAAA;AAAA,QAAA,YAAA,GAAA,KAAA;AAAoB;;AACnC,UAAI,MAAM,GAAG,EAAb;AACA,UAAI,MAAM,GAAG,EAAb;AACA,UAAI,YAAJ,EAAkB,MAAM,IAAI,GAAV;AAElB,MAAA,MAAM,IAAI,KAAK,MAAL,CAAY,IAAZ,CAAV;AAEM,UAAA,MAAA,GAAA,IAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,MAAA;;AACN,UACE,IAAI,CAAC,gBAAL,CAAsB,IAAtB,IAA8B,CAA9B,IACA,MAAM,CAAC,sBAAP,CAA8B,QAA9B,CAAuC,MAAvC,CADA,IAEA,KAAK,OAAL,KAAiB,KAAK,CAAC,OAAN,CAAc,WAHjC,EAIE;AACA,YAAI,CAAC,GAAG,MAAM,CAAC,sBAAP,CAA8B,OAA9B,CAAsC,IAAI,CAAC,IAAI,CAAC,MAAL,GAAc,CAAf,CAA1C,CAAR;AACA,YAAI,iBAAiB,GAAA,KAAA,CAArB;;AAEA,YACE,IAAI,CACD,KADH,CACS,EADT,EAEG,KAFH,CAES,IAAI,CAAC,MAAL,GAAc,CAFvB,EAE0B,IAAI,CAAC,MAF/B,EAGG,IAHH,CAGQ,EAHR,MAGgB,IAJlB,EAKE;AACA,UAAA,iBAAiB,GAAG,GAApB;AACD,SAPD,MAOO;AACL,UAAA,iBAAiB,GAAG,MAAM,CAAC,oBAAP,CAA4B,CAA5B,CAApB;AACD;;AACD,QAAA,IAAI,GACF,IAAI,CACD,KADH,CACS,EADT,EAEG,MAFH,CAEU,CAFV,EAEa,IAAI,CAAC,MAAL,GAAc,CAF3B,EAGG,IAHH,CAGQ,EAHR,IAGc,iBAJhB;AAKD;;AACD,MAAA,MAAM,GAAG,IAAI,GAAG,MAAhB;AAEA,aAAO,MAAP;AACD,KAnCD;;AAqCQ,IAAA,gBAAA,CAAA,SAAA,CAAA,MAAA,GAAR,UAAe,IAAf,EAA2B;AACrB,UAAA,EAAA,GAAA,IAAA,CAAA,iBAAA,CAAA,IAAA,CAAA;AAAA,UAAE,MAAA,GAAA,EAAA,CAAA,MAAF;AAAA,UAAU,KAAA,GAAA,EAAA,CAAA,KAAV;;AACJ,UAAI,MAAM,GAAG,EAAb;;AAEA,UAAI,CAAC,MAAM,CAAC,MAAP,CAAc,QAAd,CAAuB,MAAvB,CAAD,IAAmC,KAAK,OAAL,KAAiB,KAAK,CAAC,OAAN,CAAc,WAAtE,EAAmF;AACjF,YAAI,MAAM,CAAC,WAAP,CAAmB,QAAnB,CAA4B,KAA5B,CAAJ,EAAwC;AACtC,UAAA,MAAM,IAAI,GAAV;AACD,SAFD,MAEO,IAAI,MAAM,CAAC,UAAP,CAAkB,QAAlB,CAA2B,KAA3B,CAAJ,EAAuC;AAC5C,UAAA,MAAM,IAAI,GAAV;AACD;AACF;;AAED,cAAQ,KAAK,OAAb;AACE,aAAK,CAAL;AACE,UAAA,MAAM,IAAI,GAAV;AACA;;AACF,aAAK,CAAL;AACE,UAAA,MAAM,IAAI,GAAV;AACA;;AACF,aAAK,CAAL;AACE,cAAI,MAAM,CAAC,MAAP,CAAc,QAAd,CAAuB,MAAvB,CAAJ,EAAoC;AAClC,YAAA,MAAM,IAAI,GAAV;;AACA,gBAAI,MAAM,CAAC,WAAP,CAAmB,QAAnB,CAA4B,KAA5B,CAAJ,EAAwC;AACtC,cAAA,MAAM,IAAI,GAAV;AACD,aAFD,MAEO,IAAI,MAAM,CAAC,UAAP,CAAkB,QAAlB,CAA2B,KAA3B,CAAJ,EAAuC;AAC5C,cAAA,MAAM,IAAI,GAAV;AACD;AACF;;AACD;;AACF,aAAK,CAAL;AACE,cAAI,MAAM,CAAC,WAAP,CAAmB,QAAnB,CAA4B,KAA5B,CAAJ,EAAwC;AACtC,YAAA,MAAM,IAAI,KAAV;AACD,WAFD,MAEO,IAAI,MAAM,CAAC,UAAP,CAAkB,QAAlB,CAA2B,KAA3B,CAAJ,EAAuC;AAC5C,YAAA,MAAM,IAAI,KAAV;AACD;;AACD;;AACF,aAAK,CAAL;AACE,cAAI,MAAM,CAAC,WAAP,CAAmB,QAAnB,CAA4B,KAA5B,CAAJ,EAAwC;AACtC,YAAA,MAAM,IAAI,KAAV;AACD,WAFD,MAEO,IAAI,MAAM,CAAC,UAAP,CAAkB,QAAlB,CAA2B,KAA3B,CAAJ,EAAuC;AAC5C,YAAA,MAAM,IAAI,KAAV;AACD;;AACD;;AACF,aAAK,CAAL;AACE,cAAI,MAAM,CAAC,WAAP,CAAmB,QAAnB,CAA4B,KAA5B,CAAJ,EAAwC;AACtC,YAAA,MAAM,IAAI,MAAV;AACD,WAFD,MAEO,IAAI,MAAM,CAAC,UAAP,CAAkB,QAAlB,CAA2B,KAA3B,CAAJ,EAAuC;AAC5C,YAAA,MAAM,IAAI,MAAV;AACD;;AACD;AArCJ;;AAwCA,aAAO,MAAP;AACD,KArDO;;AAsDV,WAAA,gBAAA;AAtGA,GAAA,EAAA;;AAAa,EAAA,MAAA,CAAA,gBAAA,GAAgB,gBAAhB;;AAwGb,MAAA,UAAA;AAAA;AAAA,cAAA;AAEE,aAAA,UAAA,GAAA;AACE,WAAK,IAAL,GAAY,KAAK,CAAC,IAAN,CAAW,QAAvB;AACD;;AAED,IAAA,UAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,IAAL,EAAqB;AACnB,WAAK,IAAL,GAAY,IAAZ;AACA,aAAO,IAAP;AACD,KAHD;;AAIA,IAAA,UAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,IAAH,EAAiB,YAAjB,EAAqC;AAApB,UAAA,YAAA,KAAA,KAAA,CAAA,EAAA;AAAA,QAAA,YAAA,GAAA,KAAA;AAAoB;;AACnC,UAAI,MAAM,GAAG,EAAb;AACA,UAAI,MAAM,GAAG,EAAb;AACA,UAAI,YAAJ,EAAkB,MAAM,IAAI,GAAV;;AAElB,cAAQ,KAAK,IAAb;AACE,aAAK,KAAK,CAAC,IAAN,CAAW,QAAhB;AACE,UAAA,MAAM,GAAG,KAAK,QAAL,CAAc,IAAd,CAAT;AACA;;AACF,aAAK,KAAK,CAAC,IAAN,CAAW,UAAhB;AACE,UAAA,MAAM,IAAI,KAAK,UAAL,CAAgB,IAAhB,CAAV;AACA,UAAA,MAAM,GAAG,IAAI,GAAG,MAAhB;AACA;;AACF,aAAK,KAAK,CAAC,IAAN,CAAW,QAAhB;AACE,UAAA,MAAM,IAAI,KAAK,QAAL,CAAc,IAAd,CAAV;AACA,UAAA,MAAM,GAAG,IAAI,GAAG,MAAhB;AACA;;AACF,aAAK,KAAK,CAAC,IAAN,CAAW,QAAhB;AACE,UAAA,MAAM,IAAI,KAAK,QAAL,CAAc,IAAd,CAAV;AACA,UAAA,MAAM,GAAG,IAAI,GAAG,MAAhB;AACA;;AACF,aAAK,KAAK,CAAC,IAAN,CAAW,YAAhB;AACE,UAAA,MAAM,IAAI,KAAK,YAAL,CAAkB,IAAlB,CAAV;AACA,UAAA,MAAM,GAAG,IAAI,GAAG,MAAhB;AACA;;AACF,aAAK,KAAK,CAAC,IAAN,CAAW,MAAhB;AACE,UAAA,MAAM,IAAI,KAAK,MAAL,CAAY,IAAZ,CAAV;AACA,UAAA,MAAM,GAAG,IAAI,GAAG,MAAhB;AACA;AAvBJ;;AAyBA,aAAO,MAAP;AACD,KA/BD;;AAiCQ,IAAA,UAAA,CAAA,SAAA,CAAA,QAAA,GAAR,UAAiB,IAAjB,EAA6B;AAC3B,aAAO,IAAP;AACD,KAFO;;AAIA,IAAA,UAAA,CAAA,SAAA,CAAA,UAAA,GAAR,UAAmB,IAAnB,EAA+B;AACzB,UAAA,EAAA,GAAA,IAAA,CAAA,iBAAA,CAAA,IAAA,CAAA;AAAA,UAAE,MAAA,GAAA,EAAA,CAAA,MAAF;AAAA,UAAU,KAAA,GAAA,EAAA,CAAA,KAAV;;AACJ,UAAI,MAAM,GAAG,EAAb;;AAEA,UAAI,MAAM,CAAC,MAAP,CAAc,QAAd,CAAuB,MAAvB,CAAJ,EAAoC;AAClC,QAAA,MAAM,IAAI,GAAV;AACD;;AACD,UAAI,MAAM,CAAC,WAAP,CAAmB,QAAnB,CAA4B,KAA5B,CAAJ,EAAwC;AACtC,QAAA,MAAM,IAAI,GAAV;AACD,OAFD,MAEO,IAAI,MAAM,CAAC,UAAP,CAAkB,QAAlB,CAA2B,KAA3B,CAAJ,EAAuC;AAC5C,QAAA,MAAM,IAAI,GAAV;AACD;;AAED,aAAO,MAAP;AACD,KAdO;;AAgBA,IAAA,UAAA,CAAA,SAAA,CAAA,QAAA,GAAR,UAAiB,IAAjB,EAA6B;AAC3B,aAAO,KAAK,QAAL,CAAc,IAAd,IAAsB,GAA7B;AACD,KAFO;;AAIA,IAAA,UAAA,CAAA,SAAA,CAAA,QAAA,GAAR,UAAiB,IAAjB,EAA6B;AACvB,UAAA,EAAA,GAAA,IAAA,CAAA,iBAAA,CAAA,IAAA,CAAA;AAAA,UAAE,MAAA,GAAA,EAAA,CAAA,MAAF;AAAA,UAAU,KAAA,GAAA,EAAA,CAAA,KAAV;;AACJ,UAAI,MAAM,GAAG,EAAb;;AAEA,UAAI,MAAM,CAAC,kBAAP,CAA0B,QAA1B,CAAmC,MAAnC,CAAJ,EAAgD;AAC9C,QAAA,MAAM,IAAI,GAAV;AACD,OAFD,MAEO;AACL,QAAA,MAAM,IAAI,GAAV;AACD;;AACD,UAAI,MAAM,CAAC,WAAP,CAAmB,QAAnB,CAA4B,KAA5B,CAAJ,EAAwC;AACtC,QAAA,MAAM,IAAI,GAAV;AACD,OAFD,MAEO,IAAI,MAAM,CAAC,UAAP,CAAkB,QAAlB,CAA2B,KAA3B,CAAJ,EAAuC;AAC5C,QAAA,MAAM,IAAI,GAAV;AACD;;AAED,aAAO,MAAP;AACD,KAhBO;;AAkBA,IAAA,UAAA,CAAA,SAAA,CAAA,YAAA,GAAR,UAAqB,IAArB,EAAiC;AAC3B,UAAA,EAAA,GAAA,IAAA,CAAA,iBAAA,CAAA,IAAA,CAAA;AAAA,UAAE,MAAA,GAAA,EAAA,CAAA,MAAF;AAAA,UAAU,KAAA,GAAA,EAAA,CAAA,KAAV;;AACJ,UAAI,MAAM,GAAG,EAAb;;AAEA,UAAI,MAAM,CAAC,MAAP,CAAc,QAAd,CAAuB,MAAvB,CAAJ,EAAoC;AAClC,QAAA,MAAM,IAAI,GAAV;AACD;;AACD,UAAI,MAAM,CAAC,WAAP,CAAmB,QAAnB,CAA4B,KAA5B,CAAJ,EAAwC;AACtC,QAAA,MAAM,IAAI,IAAV;AACD,OAFD,MAEO,IAAI,MAAM,CAAC,UAAP,CAAkB,QAAlB,CAA2B,KAA3B,CAAJ,EAAuC;AAC5C,QAAA,MAAM,IAAI,IAAV;AACD;;AAED,aAAO,MAAP;AACD,KAdO;;AAgBA,IAAA,UAAA,CAAA,SAAA,CAAA,MAAA,GAAR,UAAe,IAAf,EAA2B;AACrB,UAAA,EAAA,GAAA,IAAA,CAAA,iBAAA,CAAA,IAAA,CAAA;AAAA,UAAE,MAAA,GAAA,EAAA,CAAA,MAAF;AAAA,UAAU,KAAA,GAAA,EAAA,CAAA,KAAV;;AACJ,UAAI,MAAM,GAAG,EAAb;;AAEA,UAAI,MAAM,CAAC,MAAP,CAAc,QAAd,CAAuB,MAAvB,CAAJ,EAAoC;AAClC,QAAA,MAAM,IAAI,GAAV;AACD;;AACD,UAAI,MAAM,CAAC,WAAP,CAAmB,QAAnB,CAA4B,KAA5B,CAAJ,EAAwC;AACtC,QAAA,MAAM,IAAI,GAAV;AACD,OAFD,MAEO,IAAI,MAAM,CAAC,UAAP,CAAkB,QAAlB,CAA2B,KAA3B,CAAJ,EAAuC;AAC5C,QAAA,MAAM,IAAI,GAAV;AACD;;AAED,aAAO,MAAP;AACD,KAdO;;AAeV,WAAA,UAAA;AApHA,GAAA,EAAA;;AAAa,EAAA,MAAA,CAAA,UAAA,GAAU,UAAV;;AA4Hb,WAAgB,KAAhB,CAAsB,IAAtB,EAAkC;AAChC,QAAI,UAAU,GAAG,IAAI,gBAAJ,EAAjB;;AACA,QAAI,KAAK,GAAG,IAAI,UAAJ,EAAZ;;AAEA,QAAI,gBAAgB,GAAG,SAAnB,gBAAmB,CAAC,IAAD,EAAoB;AACzC,MAAA,IAAI,GAAG,UAAU,CAAC,IAAX,CAAgB,IAAhB,EAAsB,EAAtB,CAAyB,IAAzB,CAAP;AACA,aAAO;AAAE,QAAA,gBAAgB,EAAA,gBAAlB;AAAoB,QAAA,UAAU,EAAA,UAA9B;AAAgC,QAAA,IAAI,EAAA;AAApC,OAAP;AACD,KAHD;;AAKA,QAAI,UAAU,GAAG,SAAb,UAAa,CAAC,IAAD,EAAiB;AAChC,MAAA,IAAI,GAAG,KAAK,CAAC,IAAN,CAAW,IAAX,EAAiB,EAAjB,CAAoB,IAApB,CAAP;AACA,aAAO;AAAE,QAAA,gBAAgB,EAAA,gBAAlB;AAAoB,QAAA,UAAU,EAAA,UAA9B;AAAgC,QAAA,IAAI,EAAA;AAApC,OAAP;AACD,KAHD;;AAIA,WAAO;AAAE,MAAA,gBAAgB,EAAA,gBAAlB;AAAoB,MAAA,UAAU,EAAA,UAA9B;AAAgC,MAAA,IAAI,EAAA;AAApC,KAAP;AACD;;AAde,EAAA,MAAA,CAAA,KAAA,GAAK,KAAL;AAejB,CA9TD,EAAU,MAAM,KAAN,MAAM,GAAA,EAAA,CAAhB","file":"main.c39d6dcf.js","sourceRoot":"..\\src","sourcesContent":["namespace Affixi {\n  export namespace Types {\n    export enum Case {\n      /** İsmin Yalın Hâli */\n      Absolute,\n      /** İsmin Belirtme Hâli */\n      Accusative,\n      /** İsmin Ayrılma Hâli */\n      Ablative,\n      /** İsmin Bulunma Hâli */\n      Locative,\n      /** İsmin Vasıta Hâli */\n      Instrumental,\n      /** İsmin Yönelme Hâli */\n      Dative\n    }\n    export enum Pronoun {\n      /** Birinci Tekil Şahıs */\n      SingularFirst,\n      /** İkinci Tekil Şahıs */\n      SingularSecond,\n      /** Üçüncü Tekil Şahıs */\n      SingularThird,\n      /** Birinci Çoğul Şahıs */\n      PluralFirst,\n      /** İkinci Çoğul Şahıs */\n      PluralSecond,\n      /** Üçüncü Çoğul Şahıs */\n      PluralThird\n    }\n  }\n\n  export class Sounds {\n    static UnvoicedStopConsonants = [\"p\", \"ç\", \"t\", \"k\"];\n    static UnvoicedContinuousConsonants = [\"f\", \"s\", \"ş\", \"h\"];\n    static UnvoicedConsonants = [\n      ...Sounds.UnvoicedContinuousConsonants,\n      ...Sounds.UnvoicedStopConsonants\n    ];\n    static VoicedStopConsonants = [\"b\", \"c\", \"d\", \"ğ\"];\n    static RoundedVowels = [\"o\", \"u\", \"ö\", \"ü\"];\n    static UnroundedVowels = [\"a\", \"ı\", \"e\", \"i\"];\n    static BackVowels = [\"e\", \"i\", \"ö\", \"ü\"];\n    static FrontVowels = [\"a\", \"ı\", \"o\", \"u\"];\n    static Vowels = [...Sounds.FrontVowels, ...Sounds.BackVowels];\n  }\n\n  export class Word {\n    static GetLastComponents(word: string): { letter: string; vowel: string } {\n      let input = word\n        .split(\"\")\n        .reverse()\n        .join(\"\");\n      let index = 0;\n      let letter = input[0];\n      let vowel = input[index];\n\n      while (!Sounds.Vowels.includes(vowel)) {\n        index++;\n        vowel = input[index];\n      }\n      return { letter, vowel };\n    }\n\n    static GetSyllableCount(word: string): number {\n      let count = 0;\n      let input = word.split(\"\");\n      input.forEach(letter => {\n        if (Sounds.Vowels.includes(letter.toLowerCase())) count += 1;\n      });\n\n      return count;\n    }\n  }\n\n  export class PossessiveSuffix {\n    pronoun: Types.Pronoun;\n    constructor() {\n      this.pronoun = Types.Pronoun.SingularFirst;\n    }\n\n    case(pronoun: Types.Pronoun): PossessiveSuffix {\n      this.pronoun = pronoun;\n      return this;\n    }\n\n    of(word: string, isProperNoun = false): string {\n      let result = \"\";\n      let suffix = \"\";\n      if (isProperNoun) suffix += \"'\";\n\n      suffix += this.suffix(word);\n\n      let { letter } = Word.GetLastComponents(word);\n      if (\n        Word.GetSyllableCount(word) > 1 &&\n        Sounds.UnvoicedStopConsonants.includes(letter) &&\n        this.pronoun !== Types.Pronoun.PluralThird\n      ) {\n        let i = Sounds.UnvoicedStopConsonants.indexOf(word[word.length - 1]);\n        let voicedCounterPart;\n\n        if (\n          word\n            .split(\"\")\n            .slice(word.length - 2, word.length)\n            .join(\"\") === \"nk\"\n        ) {\n          voicedCounterPart = \"g\";\n        } else {\n          voicedCounterPart = Sounds.VoicedStopConsonants[i];\n        }\n        word =\n          word\n            .split(\"\")\n            .splice(0, word.length - 1)\n            .join(\"\") + voicedCounterPart;\n      }\n      result = word + suffix;\n\n      return result;\n    }\n\n    private suffix(word: string): string {\n      let { letter, vowel } = Word.GetLastComponents(word);\n      let suffix = \"\";\n\n      if (!Sounds.Vowels.includes(letter) && this.pronoun !== Types.Pronoun.PluralThird) {\n        if (Sounds.FrontVowels.includes(vowel)) {\n          suffix += \"ı\";\n        } else if (Sounds.BackVowels.includes(vowel)) {\n          suffix += \"i\";\n        }\n      }\n\n      switch (this.pronoun) {\n        case 0:\n          suffix += \"m\";\n          break;\n        case 1:\n          suffix += \"n\";\n          break;\n        case 2:\n          if (Sounds.Vowels.includes(letter)) {\n            suffix += \"s\";\n            if (Sounds.FrontVowels.includes(vowel)) {\n              suffix += \"ı\";\n            } else if (Sounds.BackVowels.includes(vowel)) {\n              suffix += \"i\";\n            }\n          }\n          break;\n        case 3:\n          if (Sounds.FrontVowels.includes(vowel)) {\n            suffix += \"mız\";\n          } else if (Sounds.BackVowels.includes(vowel)) {\n            suffix += \"miz\";\n          }\n          break;\n        case 4:\n          if (Sounds.FrontVowels.includes(vowel)) {\n            suffix += \"nız\";\n          } else if (Sounds.BackVowels.includes(vowel)) {\n            suffix += \"niz\";\n          }\n          break;\n        case 5:\n          if (Sounds.FrontVowels.includes(vowel)) {\n            suffix += \"ları\";\n          } else if (Sounds.BackVowels.includes(vowel)) {\n            suffix += \"leri\";\n          }\n          break;\n      }\n\n      return suffix;\n    }\n  }\n\n  export class CaseSuffix {\n    type: Types.Case;\n    constructor() {\n      this.type = Types.Case.Absolute;\n    }\n\n    case(type: Types.Case): CaseSuffix {\n      this.type = type;\n      return this;\n    }\n    of(word: string, isProperNoun = false): string {\n      let result = \"\";\n      let suffix = \"\";\n      if (isProperNoun) suffix += \"'\";\n\n      switch (this.type) {\n        case Types.Case.Absolute:\n          result = this.absolute(word);\n          break;\n        case Types.Case.Accusative:\n          suffix += this.accusative(word);\n          result = word + suffix;\n          break;\n        case Types.Case.Ablative:\n          suffix += this.ablative(word);\n          result = word + suffix;\n          break;\n        case Types.Case.Locative:\n          suffix += this.locative(word);\n          result = word + suffix;\n          break;\n        case Types.Case.Instrumental:\n          suffix += this.instrumental(word);\n          result = word + suffix;\n          break;\n        case Types.Case.Dative:\n          suffix += this.dative(word);\n          result = word + suffix;\n          break;\n      }\n      return result;\n    }\n\n    private absolute(word: string): string {\n      return word;\n    }\n\n    private accusative(word: string): string {\n      let { letter, vowel } = Word.GetLastComponents(word);\n      let suffix = \"\";\n\n      if (Sounds.Vowels.includes(letter)) {\n        suffix += \"y\";\n      }\n      if (Sounds.FrontVowels.includes(vowel)) {\n        suffix += \"ı\";\n      } else if (Sounds.BackVowels.includes(vowel)) {\n        suffix += \"i\";\n      }\n\n      return suffix;\n    }\n\n    private ablative(word: string): string {\n      return this.locative(word) + \"n\";\n    }\n\n    private locative(word: string): string {\n      let { letter, vowel } = Word.GetLastComponents(word);\n      let suffix = \"\";\n\n      if (Sounds.UnvoicedConsonants.includes(letter)) {\n        suffix += \"t\";\n      } else {\n        suffix += \"d\";\n      }\n      if (Sounds.FrontVowels.includes(vowel)) {\n        suffix += \"a\";\n      } else if (Sounds.BackVowels.includes(vowel)) {\n        suffix += \"e\";\n      }\n\n      return suffix;\n    }\n\n    private instrumental(word: string): string {\n      let { letter, vowel } = Word.GetLastComponents(word);\n      let suffix = \"\";\n\n      if (Sounds.Vowels.includes(letter)) {\n        suffix += \"y\";\n      }\n      if (Sounds.FrontVowels.includes(vowel)) {\n        suffix += \"la\";\n      } else if (Sounds.BackVowels.includes(vowel)) {\n        suffix += \"le\";\n      }\n\n      return suffix;\n    }\n\n    private dative(word: string): string {\n      let { letter, vowel } = Word.GetLastComponents(word);\n      let suffix = \"\";\n\n      if (Sounds.Vowels.includes(letter)) {\n        suffix += \"y\";\n      }\n      if (Sounds.FrontVowels.includes(vowel)) {\n        suffix += \"a\";\n      } else if (Sounds.BackVowels.includes(vowel)) {\n        suffix += \"e\";\n      }\n\n      return suffix;\n    }\n  }\n\n  export interface Chain {\n    possessiveSuffix: (type: Types.Pronoun) => Chain;\n    caseSuffix: (type: Types.Case) => Chain;\n    word: string;\n  }\n\n  export function chain(word: string): Chain {\n    let possessive = new PossessiveSuffix();\n    let _case = new CaseSuffix();\n\n    let possessiveSuffix = (type: Types.Pronoun): Chain => {\n      word = possessive.case(type).of(word);\n      return { possessiveSuffix, caseSuffix, word };\n    };\n\n    let caseSuffix = (type: Types.Case): Chain => {\n      word = _case.case(type).of(word);\n      return { possessiveSuffix, caseSuffix, word };\n    };\n    return { possessiveSuffix, caseSuffix, word };\n  }\n}"]}